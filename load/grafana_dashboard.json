{
  "__inputs": [
    {
      "name": "DS_GRAFANA-POSTGRESQL-DATASOURCE",
      "label": "grafana-postgresql-datasource",
      "description": "",
      "type": "datasource",
      "pluginId": "grafana-postgresql-datasource",
      "pluginName": "PostgreSQL"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "barchart",
      "name": "Bar chart",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.1.4"
    },
    {
      "type": "datasource",
      "id": "grafana-postgresql-datasource",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "marcusolsson-dynamictext-panel",
      "name": "Business Text",
      "version": "5.4.0"
    },
    {
      "type": "panel",
      "id": "piechart",
      "name": "Pie chart",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 16,
      "panels": [],
      "title": "Rankings - Músicas",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking das $top_rankings_limit músicas com maior métrica de dançabilidade no(s) gênero(s) selecionado(s).\n\nClique na capa do álbum para ampliar, ou no título da música para reproduzir/pausar uma prévia (se disponível).",
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 1
      },
      "id": 11,
      "options": {
        "afterRender": "openNewTab = (url) => {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nplayOrPause = (audio_url) => {\r\n  player = document.getElementById('panel_preview_player');\r\n\r\n  if (player) {\r\n    if (player.src == audio_url) {\r\n      if (player.paused) {\r\n        player.play();\r\n      } else {\r\n        player.pause();\r\n      }\r\n    } else {\r\n      player.src = audio_url;\r\n      player.play();\r\n    }\r\n  } else {\r\n    player = document.createElement('audio');\r\n    player.setAttribute('id', 'panel_preview_player');\r\n    player.setAttribute('src', audio_url);\r\n    document.body.appendChild(player);\r\n    player.play();\r\n  }\r\n}\r\n",
        "content": "<div class=\"cover\" style=\"background-image: url({{image_url}})\" onclick=\"openNewTab('{{image_url}}')\"></div>\n<div id=\"content\">\n  <p class=\"details\" id=\"track_name\" onclick=\"playOrPause('{{preview_url}}')\">{{track_name}}</p>\n  <div class=\"icon\" id=\"artist_icon\"></div>\n  <p class=\"details\" id=\"artists_name\">{{artist_names}}</p>\n  <div class=\"icon\" id=\"album_icon\"></div>\n  <p class=\"details\" id=\"album_name\">{{album_name}}</p>\n</div>\n",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "styles",
          "afterRender"
        ],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "everyRow",
        "styles": ".dt-row {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.cover {\r\n  background-size: contain;\r\n  cursor: pointer;\r\n  float: left; \r\n  width: 66px; \r\n  height: 66px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.icon {\r\n  float: left;\r\n  width: 1rem;\r\n  height: 1rem;\r\n  margin-top: 0.3rem;\r\n  margin-right: 4px;\r\n}\r\n\r\n.details {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  width: fit-content;\r\n  max-width: -moz-available;          /* WebKit-based browsers will ignore this. */\r\n  max-width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\r\n  max-width: fill-available;\r\n  max-width: stretch;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n#track_name {\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n#track_name:hover {  \r\n  text-decoration: underline;\r\n}\r\n\r\n#artist_icon {\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}\r\n\r\n#album_icon{\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm256-96a96 96 0 1 1 0 192 96 96 0 1 1 0-192zm0 224a128 128 0 1 0 0-256 128 128 0 1 0 0 256zm0-96a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}",
        "wrap": false
      },
      "pluginVersion": "5.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \r\n    t.track_id,\r\n    t.preview_url,\r\n    t.track_name, \r\n    a.album_name, \r\n    STRING_AGG(DISTINCT ar.artist_name, ', ') AS artist_names,\r\n    (\r\n        SELECT i.url\r\n        FROM image_track it\r\n        JOIN images i ON it.image_id = i.image_id\r\n        WHERE it.track_id = t.track_id\r\n        ORDER BY i.height DESC\r\n        LIMIT 1\r\n    ) AS image_url\r\nFROM \r\n    tracks t\r\nJOIN \r\n    album a ON t.album_id = a.album_id\r\nJOIN \r\n    artist_track at ON t.track_id = at.track_id\r\nJOIN \r\n    artists ar ON at.artist_id = ar.artist_id\r\nWHERE\r\n    t.genre IN ($ranking_genres)\r\nGROUP BY \r\n    t.track_id, t.track_name, a.album_name\r\nORDER BY \r\n    t.danceability DESC\r\nLIMIT $top_rankings_limit;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Músicas mais dançantes",
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking das $top_rankings_limit músicas com maior métrica de energia no(s) gênero(s) selecionado(s).\n\nClique na capa do álbum para ampliar, ou no título da música para reproduzir/pausar uma prévia (se disponível).",
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 1
      },
      "id": 17,
      "options": {
        "afterRender": "openNewTab = (url) => {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nplayOrPause = (audio_url) => {\r\n  player = document.getElementById('panel_preview_player');\r\n\r\n  if (player) {\r\n    if (player.src == audio_url) {\r\n      if (player.paused) {\r\n        player.play();\r\n      } else {\r\n        player.pause();\r\n      }\r\n    } else {\r\n      player.src = audio_url;\r\n      player.play();\r\n    }\r\n  } else {\r\n    player = document.createElement('audio');\r\n    player.setAttribute('id', 'panel_preview_player');\r\n    player.setAttribute('src', audio_url);\r\n    document.body.appendChild(player);\r\n    player.play();\r\n  }\r\n}\r\n",
        "content": "<div class=\"cover\" style=\"background-image: url({{image_url}})\" onclick=\"openNewTab('{{image_url}}')\"></div>\n<div id=\"content\">\n  <p class=\"details\" id=\"track_name\" onclick=\"playOrPause('{{preview_url}}')\">{{track_name}}</p>\n  <div class=\"icon\" id=\"artist_icon\"></div>\n  <p class=\"details\" id=\"artists_name\">{{artist_names}}</p>\n  <div class=\"icon\" id=\"album_icon\"></div>\n  <p class=\"details\" id=\"album_name\">{{album_name}}</p>\n</div>",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "styles",
          "afterRender"
        ],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "everyRow",
        "styles": ".dt-row {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.cover {\r\n  background-size: contain;\r\n  cursor: pointer;\r\n  float: left; \r\n  width: 66px; \r\n  height: 66px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.icon {\r\n  float: left;\r\n  width: 1rem;\r\n  height: 1rem;\r\n  margin-top: 0.3rem;\r\n  margin-right: 4px;\r\n}\r\n\r\n.details {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  width: fit-content;\r\n  max-width: -moz-available;          /* WebKit-based browsers will ignore this. */\r\n  max-width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\r\n  max-width: fill-available;\r\n  max-width: stretch;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n#track_name {\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n#track_name:hover {  \r\n  text-decoration: underline;\r\n}\r\n\r\n#artist_icon {\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}\r\n\r\n#album_icon{\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm256-96a96 96 0 1 1 0 192 96 96 0 1 1 0-192zm0 224a128 128 0 1 0 0-256 128 128 0 1 0 0 256zm0-96a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}",
        "wrap": false
      },
      "pluginVersion": "5.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \r\n    t.track_id,\r\n    t.preview_url,\r\n    t.track_name, \r\n    a.album_name, \r\n    STRING_AGG(DISTINCT ar.artist_name, ', ') AS artist_names,\r\n    (\r\n        SELECT i.url\r\n        FROM image_track it\r\n        JOIN images i ON it.image_id = i.image_id\r\n        WHERE it.track_id = t.track_id\r\n        ORDER BY i.height DESC\r\n        LIMIT 1\r\n    ) AS image_url\r\nFROM \r\n    tracks t\r\nJOIN \r\n    album a ON t.album_id = a.album_id\r\nJOIN \r\n    artist_track at ON t.track_id = at.track_id\r\nJOIN \r\n    artists ar ON at.artist_id = ar.artist_id\r\nWHERE\r\n    t.genre IN ($ranking_genres)\r\nGROUP BY \r\n    t.track_id, t.track_name, a.album_name\r\nORDER BY \r\n    t.energy DESC\r\nLIMIT $top_rankings_limit;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Músicas mais enérgicas",
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking das $top_rankings_limit músicas com maior métrica de acusticidade no(s) gênero(s) selecionado(s).\n\nClique na capa do álbum para ampliar, ou no título da música para reproduzir/pausar uma prévia (se disponível).",
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 1
      },
      "id": 19,
      "options": {
        "afterRender": "openNewTab = (url) => {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nplayOrPause = (audio_url) => {\r\n  player = document.getElementById('panel_preview_player');\r\n\r\n  if (player) {\r\n    if (player.src == audio_url) {\r\n      if (player.paused) {\r\n        player.play();\r\n      } else {\r\n        player.pause();\r\n      }\r\n    } else {\r\n      player.src = audio_url;\r\n      player.play();\r\n    }\r\n  } else {\r\n    player = document.createElement('audio');\r\n    player.setAttribute('id', 'panel_preview_player');\r\n    player.setAttribute('src', audio_url);\r\n    document.body.appendChild(player);\r\n    player.play();\r\n  }\r\n}\r\n",
        "content": "<div class=\"cover\" style=\"background-image: url({{image_url}})\" onclick=\"openNewTab('{{image_url}}')\"></div>\n<div id=\"content\">\n  <p class=\"details\" id=\"track_name\" onclick=\"playOrPause('{{preview_url}}')\">{{track_name}}</p>\n  <div class=\"icon\" id=\"artist_icon\"></div>\n  <p class=\"details\" id=\"artists_name\">{{artist_names}}</p>\n  <div class=\"icon\" id=\"album_icon\"></div>\n  <p class=\"details\" id=\"album_name\">{{album_name}}</p>\n</div>",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "styles",
          "afterRender"
        ],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "everyRow",
        "styles": ".dt-row {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.cover {\r\n  background-size: contain;\r\n  cursor: pointer;\r\n  float: left; \r\n  width: 66px; \r\n  height: 66px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.icon {\r\n  float: left;\r\n  width: 1rem;\r\n  height: 1rem;\r\n  margin-top: 0.3rem;\r\n  margin-right: 4px;\r\n}\r\n\r\n.details {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  width: fit-content;\r\n  max-width: -moz-available;          /* WebKit-based browsers will ignore this. */\r\n  max-width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\r\n  max-width: fill-available;\r\n  max-width: stretch;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n#track_name {\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n#track_name:hover {  \r\n  text-decoration: underline;\r\n}\r\n\r\n#artist_icon {\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}\r\n\r\n#album_icon{\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm256-96a96 96 0 1 1 0 192 96 96 0 1 1 0-192zm0 224a128 128 0 1 0 0-256 128 128 0 1 0 0 256zm0-96a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}",
        "wrap": false
      },
      "pluginVersion": "5.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \r\n    t.track_id,\r\n    t.preview_url,\r\n    t.track_name, \r\n    a.album_name, \r\n    STRING_AGG(DISTINCT ar.artist_name, ', ') AS artist_names,\r\n    (\r\n        SELECT i.url\r\n        FROM image_track it\r\n        JOIN images i ON it.image_id = i.image_id\r\n        WHERE it.track_id = t.track_id\r\n        ORDER BY i.height DESC\r\n        LIMIT 1\r\n    ) AS image_url\r\nFROM \r\n    tracks t\r\nJOIN \r\n    album a ON t.album_id = a.album_id\r\nJOIN \r\n    artist_track at ON t.track_id = at.track_id\r\nJOIN \r\n    artists ar ON at.artist_id = ar.artist_id\r\nWHERE\r\n    t.genre IN ($ranking_genres)\r\nGROUP BY \r\n    t.track_id, t.track_name, a.album_name\r\nORDER BY \r\n    t.acousticness DESC\r\nLIMIT $top_rankings_limit;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Músicas mais acústicas",
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking das $top_rankings_limit músicas com maior métrica de vocalização no(s) gênero(s) selecionado(s).\n\nClique na capa do álbum para ampliar, ou no título da música para reproduzir/pausar uma prévia (se disponível).",
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 9
      },
      "id": 18,
      "options": {
        "afterRender": "openNewTab = (url) => {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nplayOrPause = (audio_url) => {\r\n  player = document.getElementById('panel_preview_player');\r\n\r\n  if (player) {\r\n    if (player.src == audio_url) {\r\n      if (player.paused) {\r\n        player.play();\r\n      } else {\r\n        player.pause();\r\n      }\r\n    } else {\r\n      player.src = audio_url;\r\n      player.play();\r\n    }\r\n  } else {\r\n    player = document.createElement('audio');\r\n    player.setAttribute('id', 'panel_preview_player');\r\n    player.setAttribute('src', audio_url);\r\n    document.body.appendChild(player);\r\n    player.play();\r\n  }\r\n}\r\n",
        "content": "<div class=\"cover\" style=\"background-image: url({{image_url}})\" onclick=\"openNewTab('{{image_url}}')\"></div>\n<div id=\"content\">\n  <p class=\"details\" id=\"track_name\" onclick=\"playOrPause('{{preview_url}}')\">{{track_name}}</p>\n  <div class=\"icon\" id=\"artist_icon\"></div>\n  <p class=\"details\" id=\"artists_name\">{{artist_names}}</p>\n  <div class=\"icon\" id=\"album_icon\"></div>\n  <p class=\"details\" id=\"album_name\">{{album_name}}</p>\n</div>",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "styles",
          "afterRender"
        ],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "everyRow",
        "styles": ".dt-row {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.cover {\r\n  background-size: contain;\r\n  cursor: pointer;\r\n  float: left; \r\n  width: 66px; \r\n  height: 66px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.icon {\r\n  float: left;\r\n  width: 1rem;\r\n  height: 1rem;\r\n  margin-top: 0.3rem;\r\n  margin-right: 4px;\r\n}\r\n\r\n.details {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  width: fit-content;\r\n  max-width: -moz-available;          /* WebKit-based browsers will ignore this. */\r\n  max-width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\r\n  max-width: fill-available;\r\n  max-width: stretch;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n#track_name {\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n#track_name:hover {  \r\n  text-decoration: underline;\r\n}\r\n\r\n#artist_icon {\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}\r\n\r\n#album_icon{\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm256-96a96 96 0 1 1 0 192 96 96 0 1 1 0-192zm0 224a128 128 0 1 0 0-256 128 128 0 1 0 0 256zm0-96a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}",
        "wrap": false
      },
      "pluginVersion": "5.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \r\n    t.track_id,\r\n    t.preview_url,\r\n    t.track_name, \r\n    a.album_name, \r\n    STRING_AGG(DISTINCT ar.artist_name, ', ') AS artist_names,\r\n    (\r\n        SELECT i.url\r\n        FROM image_track it\r\n        JOIN images i ON it.image_id = i.image_id\r\n        WHERE it.track_id = t.track_id\r\n        ORDER BY i.height DESC\r\n        LIMIT 1\r\n    ) AS image_url\r\nFROM \r\n    tracks t\r\nJOIN \r\n    album a ON t.album_id = a.album_id\r\nJOIN \r\n    artist_track at ON t.track_id = at.track_id\r\nJOIN \r\n    artists ar ON at.artist_id = ar.artist_id\r\nWHERE\r\n    t.genre IN ($ranking_genres)\r\nGROUP BY \r\n    t.track_id, t.track_name, a.album_name\r\nORDER BY \r\n    t.speechiness DESC\r\nLIMIT $top_rankings_limit;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Músicas com maior vocalização",
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking das $top_rankings_limit músicas com maior métrica de vivacidade no(s) gênero(s) selecionado(s).\n\nClique na capa do álbum para ampliar, ou no título da música para reproduzir/pausar uma prévia (se disponível).",
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 9
      },
      "id": 20,
      "options": {
        "afterRender": "openNewTab = (url) => {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nplayOrPause = (audio_url) => {\r\n  player = document.getElementById('panel_preview_player');\r\n\r\n  if (player) {\r\n    if (player.src == audio_url) {\r\n      if (player.paused) {\r\n        player.play();\r\n      } else {\r\n        player.pause();\r\n      }\r\n    } else {\r\n      player.src = audio_url;\r\n      player.play();\r\n    }\r\n  } else {\r\n    player = document.createElement('audio');\r\n    player.setAttribute('id', 'panel_preview_player');\r\n    player.setAttribute('src', audio_url);\r\n    document.body.appendChild(player);\r\n    player.play();\r\n  }\r\n}\r\n",
        "content": "<div class=\"cover\" style=\"background-image: url({{image_url}})\" onclick=\"openNewTab('{{image_url}}')\"></div>\n<div id=\"content\">\n  <p class=\"details\" id=\"track_name\" onclick=\"playOrPause('{{preview_url}}')\">{{track_name}}</p>\n  <div class=\"icon\" id=\"artist_icon\"></div>\n  <p class=\"details\" id=\"artists_name\">{{artist_names}}</p>\n  <div class=\"icon\" id=\"album_icon\"></div>\n  <p class=\"details\" id=\"album_name\">{{album_name}}</p>\n</div>",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "styles",
          "afterRender"
        ],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "everyRow",
        "styles": ".dt-row {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.cover {\r\n  background-size: contain;\r\n  cursor: pointer;\r\n  float: left; \r\n  width: 66px; \r\n  height: 66px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.icon {\r\n  float: left;\r\n  width: 1rem;\r\n  height: 1rem;\r\n  margin-top: 0.3rem;\r\n  margin-right: 4px;\r\n}\r\n\r\n.details {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  width: fit-content;\r\n  max-width: -moz-available;          /* WebKit-based browsers will ignore this. */\r\n  max-width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\r\n  max-width: fill-available;\r\n  max-width: stretch;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n#track_name {\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n#track_name:hover {  \r\n  text-decoration: underline;\r\n}\r\n\r\n#artist_icon {\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}\r\n\r\n#album_icon{\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm256-96a96 96 0 1 1 0 192 96 96 0 1 1 0-192zm0 224a128 128 0 1 0 0-256 128 128 0 1 0 0 256zm0-96a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}",
        "wrap": false
      },
      "pluginVersion": "5.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \r\n    t.track_id,\r\n    t.preview_url,\r\n    t.track_name, \r\n    a.album_name, \r\n    STRING_AGG(DISTINCT ar.artist_name, ', ') AS artist_names,\r\n    (\r\n        SELECT i.url\r\n        FROM image_track it\r\n        JOIN images i ON it.image_id = i.image_id\r\n        WHERE it.track_id = t.track_id\r\n        ORDER BY i.height DESC\r\n        LIMIT 1\r\n    ) AS image_url\r\nFROM \r\n    tracks t\r\nJOIN \r\n    album a ON t.album_id = a.album_id\r\nJOIN \r\n    artist_track at ON t.track_id = at.track_id\r\nJOIN \r\n    artists ar ON at.artist_id = ar.artist_id\r\nWHERE\r\n    t.genre IN ($ranking_genres)\r\nGROUP BY \r\n    t.track_id, t.track_name, a.album_name\r\nORDER BY \r\n    t.liveness DESC\r\nLIMIT $top_rankings_limit;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Músicas com maior vivacidade",
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking das $top_rankings_limit músicas com maior métrica de instrumentabilidade no(s) gênero(s) selecionado(s).\n\nClique na capa do álbum para ampliar, ou no título da música para reproduzir/pausar uma prévia (se disponível).",
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 9
      },
      "id": 21,
      "options": {
        "afterRender": "openNewTab = (url) => {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nplayOrPause = (audio_url) => {\r\n  player = document.getElementById('panel_preview_player');\r\n\r\n  if (player) {\r\n    if (player.src == audio_url) {\r\n      if (player.paused) {\r\n        player.play();\r\n      } else {\r\n        player.pause();\r\n      }\r\n    } else {\r\n      player.src = audio_url;\r\n      player.play();\r\n    }\r\n  } else {\r\n    player = document.createElement('audio');\r\n    player.setAttribute('id', 'panel_preview_player');\r\n    player.setAttribute('src', audio_url);\r\n    document.body.appendChild(player);\r\n    player.play();\r\n  }\r\n}\r\n",
        "content": "<div class=\"cover\" style=\"background-image: url({{image_url}})\" onclick=\"openNewTab('{{image_url}}')\"></div>\n<div id=\"content\">\n  <p class=\"details\" id=\"track_name\" onclick=\"playOrPause('{{preview_url}}')\">{{track_name}}</p>\n  <div class=\"icon\" id=\"artist_icon\"></div>\n  <p class=\"details\" id=\"artists_name\">{{artist_names}}</p>\n  <div class=\"icon\" id=\"album_icon\"></div>\n  <p class=\"details\" id=\"album_name\">{{album_name}}</p>\n</div>",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "styles",
          "afterRender"
        ],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "everyRow",
        "styles": ".dt-row {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.cover {\r\n  background-size: contain;\r\n  cursor: pointer;\r\n  float: left; \r\n  width: 66px; \r\n  height: 66px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.icon {\r\n  float: left;\r\n  width: 1rem;\r\n  height: 1rem;\r\n  margin-top: 0.3rem;\r\n  margin-right: 4px;\r\n}\r\n\r\n.details {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  width: fit-content;\r\n  max-width: -moz-available;          /* WebKit-based browsers will ignore this. */\r\n  max-width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\r\n  max-width: fill-available;\r\n  max-width: stretch;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n#track_name {\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n#track_name:hover {  \r\n  text-decoration: underline;\r\n}\r\n\r\n#artist_icon {\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}\r\n\r\n#album_icon{\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm256-96a96 96 0 1 1 0 192 96 96 0 1 1 0-192zm0 224a128 128 0 1 0 0-256 128 128 0 1 0 0 256zm0-96a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}",
        "wrap": false
      },
      "pluginVersion": "5.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \r\n    t.track_id,\r\n    t.preview_url,\r\n    t.track_name, \r\n    a.album_name, \r\n    STRING_AGG(DISTINCT ar.artist_name, ', ') AS artist_names,\r\n    (\r\n        SELECT i.url\r\n        FROM image_track it\r\n        JOIN images i ON it.image_id = i.image_id\r\n        WHERE it.track_id = t.track_id\r\n        ORDER BY i.height DESC\r\n        LIMIT 1\r\n    ) AS image_url\r\nFROM \r\n    tracks t\r\nJOIN \r\n    album a ON t.album_id = a.album_id\r\nJOIN \r\n    artist_track at ON t.track_id = at.track_id\r\nJOIN \r\n    artists ar ON at.artist_id = ar.artist_id\r\nWHERE\r\n    t.genre IN ($ranking_genres)\r\nGROUP BY \r\n    t.track_id, t.track_name, a.album_name\r\nORDER BY \r\n    t.instrumentalness DESC\r\nLIMIT $top_rankings_limit;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Músicas mais instrumentais",
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking das $top_rankings_limit músicas com maior métrica de valência no(s) gênero(s) selecionado(s).\n\nClique na capa do álbum para ampliar, ou no título da música para reproduzir/pausar uma prévia (se disponível).",
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 17
      },
      "id": 22,
      "options": {
        "afterRender": "openNewTab = (url) => {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nplayOrPause = (audio_url) => {\r\n  player = document.getElementById('panel_preview_player');\r\n\r\n  if (player) {\r\n    if (player.src == audio_url) {\r\n      if (player.paused) {\r\n        player.play();\r\n      } else {\r\n        player.pause();\r\n      }\r\n    } else {\r\n      player.src = audio_url;\r\n      player.play();\r\n    }\r\n  } else {\r\n    player = document.createElement('audio');\r\n    player.setAttribute('id', 'panel_preview_player');\r\n    player.setAttribute('src', audio_url);\r\n    document.body.appendChild(player);\r\n    player.play();\r\n  }\r\n}\r\n",
        "content": "<div class=\"cover\" style=\"background-image: url({{image_url}})\" onclick=\"openNewTab('{{image_url}}')\"></div>\n<div id=\"content\">\n  <p class=\"details\" id=\"track_name\" onclick=\"playOrPause('{{preview_url}}')\">{{track_name}}</p>\n  <div class=\"icon\" id=\"artist_icon\"></div>\n  <p class=\"details\" id=\"artists_name\">{{artist_names}}</p>\n  <div class=\"icon\" id=\"album_icon\"></div>\n  <p class=\"details\" id=\"album_name\">{{album_name}}</p>\n</div>",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "styles",
          "afterRender"
        ],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "everyRow",
        "styles": ".dt-row {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.cover {\r\n  background-size: contain;\r\n  cursor: pointer;\r\n  float: left; \r\n  width: 66px; \r\n  height: 66px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.icon {\r\n  float: left;\r\n  width: 1rem;\r\n  height: 1rem;\r\n  margin-top: 0.3rem;\r\n  margin-right: 4px;\r\n}\r\n\r\n.details {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  width: fit-content;\r\n  max-width: -moz-available;          /* WebKit-based browsers will ignore this. */\r\n  max-width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\r\n  max-width: fill-available;\r\n  max-width: stretch;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n#track_name {\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n#track_name:hover {  \r\n  text-decoration: underline;\r\n}\r\n\r\n#artist_icon {\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}\r\n\r\n#album_icon{\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm256-96a96 96 0 1 1 0 192 96 96 0 1 1 0-192zm0 224a128 128 0 1 0 0-256 128 128 0 1 0 0 256zm0-96a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}",
        "wrap": false
      },
      "pluginVersion": "5.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \r\n    t.track_id,\r\n    t.preview_url,\r\n    t.track_name, \r\n    a.album_name, \r\n    STRING_AGG(DISTINCT ar.artist_name, ', ') AS artist_names,\r\n    (\r\n        SELECT i.url\r\n        FROM image_track it\r\n        JOIN images i ON it.image_id = i.image_id\r\n        WHERE it.track_id = t.track_id\r\n        ORDER BY i.height DESC\r\n        LIMIT 1\r\n    ) AS image_url\r\nFROM \r\n    tracks t\r\nJOIN \r\n    album a ON t.album_id = a.album_id\r\nJOIN \r\n    artist_track at ON t.track_id = at.track_id\r\nJOIN \r\n    artists ar ON at.artist_id = ar.artist_id\r\nWHERE\r\n    t.genre IN ($ranking_genres)\r\nGROUP BY \r\n    t.track_id, t.track_name, a.album_name\r\nORDER BY \r\n    t.valence DESC\r\nLIMIT $top_rankings_limit;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Músicas com maior valência",
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking das $top_rankings_limit músicas com maior métrica de volume geral no(s) gênero(s) selecionado(s).\n\nClique na capa do álbum para ampliar, ou no título da música para reproduzir/pausar uma prévia (se disponível).",
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 17
      },
      "id": 23,
      "options": {
        "afterRender": "openNewTab = (url) => {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nplayOrPause = (audio_url) => {\r\n  player = document.getElementById('panel_preview_player');\r\n\r\n  if (player) {\r\n    if (player.src == audio_url) {\r\n      if (player.paused) {\r\n        player.play();\r\n      } else {\r\n        player.pause();\r\n      }\r\n    } else {\r\n      player.src = audio_url;\r\n      player.play();\r\n    }\r\n  } else {\r\n    player = document.createElement('audio');\r\n    player.setAttribute('id', 'panel_preview_player');\r\n    player.setAttribute('src', audio_url);\r\n    document.body.appendChild(player);\r\n    player.play();\r\n  }\r\n}\r\n",
        "content": "<div class=\"cover\" style=\"background-image: url({{image_url}})\" onclick=\"openNewTab('{{image_url}}')\"></div>\n<div id=\"content\">\n  <p class=\"details\" id=\"track_name\" onclick=\"playOrPause('{{preview_url}}')\">{{track_name}}</p>\n  <div class=\"icon\" id=\"artist_icon\"></div>\n  <p class=\"details\" id=\"artists_name\">{{artist_names}}</p>\n  <div class=\"icon\" id=\"album_icon\"></div>\n  <p class=\"details\" id=\"album_name\">{{album_name}}</p>\n</div>",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "styles",
          "afterRender"
        ],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "everyRow",
        "styles": ".dt-row {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.cover {\r\n  background-size: contain;\r\n  cursor: pointer;\r\n  float: left; \r\n  width: 66px; \r\n  height: 66px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.icon {\r\n  float: left;\r\n  width: 1rem;\r\n  height: 1rem;\r\n  margin-top: 0.3rem;\r\n  margin-right: 4px;\r\n}\r\n\r\n.details {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  width: fit-content;\r\n  max-width: -moz-available;          /* WebKit-based browsers will ignore this. */\r\n  max-width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\r\n  max-width: fill-available;\r\n  max-width: stretch;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n#track_name {\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n#track_name:hover {  \r\n  text-decoration: underline;\r\n}\r\n\r\n#artist_icon {\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}\r\n\r\n#album_icon{\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm256-96a96 96 0 1 1 0 192 96 96 0 1 1 0-192zm0 224a128 128 0 1 0 0-256 128 128 0 1 0 0 256zm0-96a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}",
        "wrap": false
      },
      "pluginVersion": "5.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \r\n    t.track_id,\r\n    t.preview_url,\r\n    t.track_name, \r\n    a.album_name, \r\n    STRING_AGG(DISTINCT ar.artist_name, ', ') AS artist_names,\r\n    (\r\n        SELECT i.url\r\n        FROM image_track it\r\n        JOIN images i ON it.image_id = i.image_id\r\n        WHERE it.track_id = t.track_id\r\n        ORDER BY i.height DESC\r\n        LIMIT 1\r\n    ) AS image_url\r\nFROM \r\n    tracks t\r\nJOIN \r\n    album a ON t.album_id = a.album_id\r\nJOIN \r\n    artist_track at ON t.track_id = at.track_id\r\nJOIN \r\n    artists ar ON at.artist_id = ar.artist_id\r\nWHERE\r\n    t.genre IN ($ranking_genres)\r\nGROUP BY \r\n    t.track_id, t.track_name, a.album_name\r\nORDER BY \r\n    t.loudness DESC\r\nLIMIT $top_rankings_limit;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Músicas com maior volume geral",
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking das $top_rankings_limit músicas com maior métrica de tempo musical no(s) gênero(s) selecionado(s).\n\nClique na capa do álbum para ampliar, ou no título da música para reproduzir/pausar uma prévia (se disponível).",
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 17
      },
      "id": 24,
      "options": {
        "afterRender": "openNewTab = (url) => {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nplayOrPause = (audio_url) => {\r\n  player = document.getElementById('panel_preview_player');\r\n\r\n  if (player) {\r\n    if (player.src == audio_url) {\r\n      if (player.paused) {\r\n        player.play();\r\n      } else {\r\n        player.pause();\r\n      }\r\n    } else {\r\n      player.src = audio_url;\r\n      player.play();\r\n    }\r\n  } else {\r\n    player = document.createElement('audio');\r\n    player.setAttribute('id', 'panel_preview_player');\r\n    player.setAttribute('src', audio_url);\r\n    document.body.appendChild(player);\r\n    player.play();\r\n  }\r\n}\r\n",
        "content": "<div class=\"cover\" style=\"background-image: url({{image_url}})\" onclick=\"openNewTab('{{image_url}}')\"></div>\n<div id=\"content\">\n  <p class=\"details\" id=\"track_name\" onclick=\"playOrPause('{{preview_url}}')\">{{track_name}}</p>\n  <div class=\"icon\" id=\"artist_icon\"></div>\n  <p class=\"details\" id=\"artists_name\">{{artist_names}}</p>\n  <div class=\"icon\" id=\"album_icon\"></div>\n  <p class=\"details\" id=\"album_name\">{{album_name}}</p>\n</div>",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [
          "styles",
          "afterRender"
        ],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "everyRow",
        "styles": ".dt-row {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.cover {\r\n  background-size: contain;\r\n  cursor: pointer;\r\n  float: left; \r\n  width: 66px; \r\n  height: 66px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.icon {\r\n  float: left;\r\n  width: 1rem;\r\n  height: 1rem;\r\n  margin-top: 0.3rem;\r\n  margin-right: 4px;\r\n}\r\n\r\n.details {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  width: fit-content;\r\n  max-width: -moz-available;          /* WebKit-based browsers will ignore this. */\r\n  max-width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\r\n  max-width: fill-available;\r\n  max-width: stretch;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n#track_name {\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n#track_name:hover {  \r\n  text-decoration: underline;\r\n}\r\n\r\n#artist_icon {\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}\r\n\r\n#album_icon{\r\n  filter: invert(81%) sepia(7%) saturate(376%) hue-rotate(201deg) brightness(104%) contrast(86%);\r\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm256-96a96 96 0 1 1 0 192 96 96 0 1 1 0-192zm0 224a128 128 0 1 0 0-256 128 128 0 1 0 0 256zm0-96a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"/></svg>');\r\n  background-repeat: no-repeat;\r\n  background-position: center; \r\n}",
        "wrap": false
      },
      "pluginVersion": "5.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \r\n    t.track_id,\r\n    t.preview_url,\r\n    t.track_name, \r\n    a.album_name, \r\n    STRING_AGG(DISTINCT ar.artist_name, ', ') AS artist_names,\r\n    (\r\n        SELECT i.url\r\n        FROM image_track it\r\n        JOIN images i ON it.image_id = i.image_id\r\n        WHERE it.track_id = t.track_id\r\n        ORDER BY i.height DESC\r\n        LIMIT 1\r\n    ) AS image_url\r\nFROM \r\n    tracks t\r\nJOIN \r\n    album a ON t.album_id = a.album_id\r\nJOIN \r\n    artist_track at ON t.track_id = at.track_id\r\nJOIN \r\n    artists ar ON at.artist_id = ar.artist_id\r\nWHERE\r\n    t.genre IN ($ranking_genres)\r\nGROUP BY \r\n    t.track_id, t.track_name, a.album_name\r\nORDER BY \r\n    t.tempo DESC\r\nLIMIT $top_rankings_limit;\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Músicas com maior tempo musical",
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 25,
      "panels": [],
      "title": "Rankings - Artistas",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking dos $top_rankings_limit artistas com maior média de dançabilidade no(s) gênero(s) selecionado(s).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 0,
        "y": 26
      },
      "id": 36,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": false
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH track_artist_feature AS (\r\n  SELECT \r\n    t.track_id,\r\n    at.artist_id,\r\n    a.artist_name,\r\n    t.danceability\r\n  FROM \r\n    tracks t\r\n  JOIN \r\n    artist_track at ON t.track_id = at.track_id\r\n  JOIN \r\n    artists a ON at.artist_id = a.artist_id\r\n  WHERE\r\n    t.genre IN ($ranking_genres)\r\n),\r\nartist_avg_feature AS (\r\n  SELECT \r\n    artist_name,\r\n    AVG(danceability) AS avg_feature\r\n  FROM \r\n    track_artist_feature\r\n  GROUP BY \r\n    artist_name\r\n)\r\nSELECT \r\n  artist_name\r\nFROM \r\n  artist_avg_feature\r\nORDER BY \r\n  avg_feature DESC\r\nLIMIT $top_rankings_limit;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Artistas com músicas mais dançantes",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking dos $top_rankings_limit artistas com maior média de energia no(s) gênero(s) selecionado(s).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 8,
        "y": 26
      },
      "id": 27,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": false
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH track_artist_feature AS (\r\n  SELECT \r\n    t.track_id,\r\n    at.artist_id,\r\n    a.artist_name,\r\n    t.energy\r\n  FROM \r\n    tracks t\r\n  JOIN \r\n    artist_track at ON t.track_id = at.track_id\r\n  JOIN \r\n    artists a ON at.artist_id = a.artist_id\r\n  WHERE\r\n    t.genre IN ($ranking_genres)\r\n),\r\nartist_avg_feature AS (\r\n  SELECT \r\n    artist_name,\r\n    AVG(energy) AS avg_feature\r\n  FROM \r\n    track_artist_feature\r\n  GROUP BY \r\n    artist_name\r\n)\r\nSELECT \r\n  artist_name\r\nFROM \r\n  artist_avg_feature\r\nORDER BY \r\n  avg_feature DESC\r\nLIMIT $top_rankings_limit;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Artistas com músicas mais enérgicas",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking dos $top_rankings_limit artistas com maior média de acusticidade no(s) gênero(s) selecionado(s).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 16,
        "y": 26
      },
      "id": 28,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": false
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH track_artist_feature AS (\r\n  SELECT \r\n    t.track_id,\r\n    at.artist_id,\r\n    a.artist_name,\r\n    t.acousticness\r\n  FROM \r\n    tracks t\r\n  JOIN \r\n    artist_track at ON t.track_id = at.track_id\r\n  JOIN \r\n    artists a ON at.artist_id = a.artist_id\r\n  WHERE\r\n    t.genre IN ($ranking_genres)\r\n),\r\nartist_avg_feature AS (\r\n  SELECT \r\n    artist_name,\r\n    AVG(acousticness) AS avg_feature\r\n  FROM \r\n    track_artist_feature\r\n  GROUP BY \r\n    artist_name\r\n)\r\nSELECT \r\n  artist_name\r\nFROM \r\n  artist_avg_feature\r\nORDER BY \r\n  avg_feature DESC\r\nLIMIT $top_rankings_limit;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Artistas com músicas mais acústicas",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking dos $top_rankings_limit artistas com maior média de vocalização no(s) gênero(s) selecionado(s).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 0,
        "y": 32
      },
      "id": 29,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": false
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH track_artist_feature AS (\r\n  SELECT \r\n    t.track_id,\r\n    at.artist_id,\r\n    a.artist_name,\r\n    t.acousticness\r\n  FROM \r\n    tracks t\r\n  JOIN \r\n    artist_track at ON t.track_id = at.track_id\r\n  JOIN \r\n    artists a ON at.artist_id = a.artist_id\r\n  WHERE\r\n    t.genre IN ($ranking_genres)\r\n),\r\nartist_avg_feature AS (\r\n  SELECT \r\n    artist_name,\r\n    AVG(acousticness) AS avg_feature\r\n  FROM \r\n    track_artist_feature\r\n  GROUP BY \r\n    artist_name\r\n)\r\nSELECT \r\n  artist_name\r\nFROM \r\n  artist_avg_feature\r\nORDER BY \r\n  avg_feature DESC\r\nLIMIT $top_rankings_limit;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Artistas com músicas mais vocais",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking dos $top_rankings_limit artistas com maior média de vivacidade no(s) gênero(s) selecionado(s).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 8,
        "y": 32
      },
      "id": 30,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": false
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH track_artist_feature AS (\r\n  SELECT \r\n    t.track_id,\r\n    at.artist_id,\r\n    a.artist_name,\r\n    t.liveness\r\n  FROM \r\n    tracks t\r\n  JOIN \r\n    artist_track at ON t.track_id = at.track_id\r\n  JOIN \r\n    artists a ON at.artist_id = a.artist_id\r\n  WHERE\r\n    t.genre IN ($ranking_genres)\r\n),\r\nartist_avg_feature AS (\r\n  SELECT \r\n    artist_name,\r\n    AVG(liveness) AS avg_feature\r\n  FROM \r\n    track_artist_feature\r\n  GROUP BY \r\n    artist_name\r\n)\r\nSELECT \r\n  artist_name\r\nFROM \r\n  artist_avg_feature\r\nORDER BY \r\n  avg_feature DESC\r\nLIMIT $top_rankings_limit;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Artistas com músicas de maior vivacidade",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking dos $top_rankings_limit artistas com maior média de instrumentabilidade no(s) gênero(s) selecionado(s).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 16,
        "y": 32
      },
      "id": 31,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": false
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH track_artist_feature AS (\r\n  SELECT \r\n    t.track_id,\r\n    at.artist_id,\r\n    a.artist_name,\r\n    t.instrumentalness\r\n  FROM \r\n    tracks t\r\n  JOIN \r\n    artist_track at ON t.track_id = at.track_id\r\n  JOIN \r\n    artists a ON at.artist_id = a.artist_id\r\n  WHERE\r\n    t.genre IN ($ranking_genres)\r\n),\r\nartist_avg_feature AS (\r\n  SELECT \r\n    artist_name,\r\n    AVG(instrumentalness) AS avg_feature\r\n  FROM \r\n    track_artist_feature\r\n  GROUP BY \r\n    artist_name\r\n)\r\nSELECT \r\n  artist_name\r\nFROM \r\n  artist_avg_feature\r\nORDER BY \r\n  avg_feature DESC\r\nLIMIT $top_rankings_limit;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Artistas com músicas mais instrumentais",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking dos $top_rankings_limit artistas com maior média de valência no(s) gênero(s) selecionado(s).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 0,
        "y": 38
      },
      "id": 32,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": false
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH track_artist_feature AS (\r\n  SELECT \r\n    t.track_id,\r\n    at.artist_id,\r\n    a.artist_name,\r\n    t.valence\r\n  FROM \r\n    tracks t\r\n  JOIN \r\n    artist_track at ON t.track_id = at.track_id\r\n  JOIN \r\n    artists a ON at.artist_id = a.artist_id\r\n  WHERE\r\n    t.genre IN ($ranking_genres)\r\n),\r\nartist_avg_feature AS (\r\n  SELECT \r\n    artist_name,\r\n    AVG(valence) AS avg_feature\r\n  FROM \r\n    track_artist_feature\r\n  GROUP BY \r\n    artist_name\r\n)\r\nSELECT \r\n  artist_name\r\nFROM \r\n  artist_avg_feature\r\nORDER BY \r\n  avg_feature DESC\r\nLIMIT $top_rankings_limit;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Artistas com músicas de maior valência",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking dos $top_rankings_limit artistas com maior média de volume geral no(s) gênero(s) selecionado(s).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 8,
        "y": 38
      },
      "id": 33,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": false
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH track_artist_feature AS (\r\n  SELECT \r\n    t.track_id,\r\n    at.artist_id,\r\n    a.artist_name,\r\n    t.loudness\r\n  FROM \r\n    tracks t\r\n  JOIN \r\n    artist_track at ON t.track_id = at.track_id\r\n  JOIN \r\n    artists a ON at.artist_id = a.artist_id\r\n  WHERE\r\n    t.genre IN ($ranking_genres)\r\n),\r\nartist_avg_feature AS (\r\n  SELECT \r\n    artist_name,\r\n    AVG(loudness) AS avg_feature\r\n  FROM \r\n    track_artist_feature\r\n  GROUP BY \r\n    artist_name\r\n)\r\nSELECT \r\n  artist_name\r\nFROM \r\n  artist_avg_feature\r\nORDER BY \r\n  avg_feature DESC\r\nLIMIT $top_rankings_limit;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Artistas com músicas de maior volume geral",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Ranking dos $top_rankings_limit artistas com maior média de tempo musical no(s) gênero(s) selecionado(s).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 16,
        "y": 38
      },
      "id": 34,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": false
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH track_artist_feature AS (\r\n  SELECT \r\n    t.track_id,\r\n    at.artist_id,\r\n    a.artist_name,\r\n    t.tempo\r\n  FROM \r\n    tracks t\r\n  JOIN \r\n    artist_track at ON t.track_id = at.track_id\r\n  JOIN \r\n    artists a ON at.artist_id = a.artist_id\r\n  WHERE\r\n    t.genre IN ($ranking_genres)\r\n),\r\nartist_avg_feature AS (\r\n  SELECT \r\n    artist_name,\r\n    AVG(tempo) AS avg_feature\r\n  FROM \r\n    track_artist_feature\r\n  GROUP BY \r\n    artist_name\r\n)\r\nSELECT \r\n  artist_name\r\nFROM \r\n  artist_avg_feature\r\nORDER BY \r\n  avg_feature DESC\r\nLIMIT $top_rankings_limit;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Artistas com músicas de maior tempo musical",
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 44
      },
      "id": 15,
      "panels": [],
      "title": "Médias gerais",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Dançabilidade descreve o quão adequada uma faixa é para dançar com base em uma combinação de elementos musicais, incluindo andamento, estabilidade de ritmo, força de batida e regularidade geral. \n\nUm valor de 0.0 é menos dançante e 1.0 é mais dançante.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 2,
          "mappings": [],
          "max": 1,
          "min": 0
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pagode"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "pop"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "edm"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 8,
        "x": 0,
        "y": 45
      },
      "id": 1,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "none",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "builder",
          "format": "table",
          "rawSql": "SELECT genre, AVG(danceability) FROM tracks GROUP BY genre ORDER BY genre ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "genre",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "AVG",
                "parameters": [
                  {
                    "name": "danceability",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "genre",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "orderBy": {
              "property": {
                "name": [
                  "genre"
                ],
                "type": "string"
              },
              "type": "property"
            }
          },
          "table": "tracks"
        }
      ],
      "title": "Dançabilidade por gênero",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Energia é um valor de 0.0 a 1.0 que representa uma medida perceptiva de intensidade e atividade. \n\nNormalmente, as faixas energéticas parecem rápidas, altas e barulhentas. Por exemplo, o death metal tem alta energia, enquanto um prelúdio de Bach tem pontuação baixa na escala. As características perceptivas que contribuem para este atributo incluem faixa dinâmica, volume percebido, timbre, taxa de início e entropia geral.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 2,
          "mappings": [],
          "max": 1,
          "min": 0
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pagode"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "avg",
                  "edm"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "edm"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 8,
        "x": 8,
        "y": 45
      },
      "id": 2,
      "options": {
        "displayLabels": [],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "none",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "builder",
          "format": "table",
          "rawSql": "SELECT genre, AVG(energy) FROM tracks GROUP BY genre ORDER BY genre ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "genre",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "AVG",
                "parameters": [
                  {
                    "name": "energy",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "genre",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "orderBy": {
              "property": {
                "name": [
                  "genre"
                ],
                "type": "string"
              },
              "type": "property"
            }
          },
          "table": "tracks"
        }
      ],
      "title": "Energia por gênero",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Uma medida de confiança de 0.0 a 1.0 para saber se a faixa é acústica. \n\n1.0 representa alta confiança de que a faixa é acústica.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#F2495C",
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 2,
          "mappings": [],
          "max": 1.1,
          "min": 0
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pagode"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "edm"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 8,
        "x": 16,
        "y": 45
      },
      "id": 7,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "none",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "builder",
          "format": "table",
          "rawSql": "SELECT genre, AVG(acousticness) FROM tracks GROUP BY genre ORDER BY genre ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "genre",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "AVG",
                "parameters": [
                  {
                    "name": "acousticness",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "genre",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "orderBy": {
              "property": {
                "name": [
                  "genre"
                ],
                "type": "string"
              },
              "type": "property"
            }
          },
          "table": "tracks"
        }
      ],
      "title": "Acusticidade por gênero",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Vocalização detecta a presença de palavras faladas em uma faixa. Quanto mais exclusivamente falada for a gravação (por exemplo, talk show, audiolivro, poesia), mais próximo de 1.0 será o valor do atributo. Valores acima de 0.66 descrevem faixas que provavelmente são compostas inteiramente de palavras faladas. \n\nValores entre 0.33 e 0.66 descrevem faixas que podem conter música e fala, seja em seções ou em camadas, incluindo casos como música rap. Valores abaixo de 0.33 provavelmente representam música e outras faixas não faladas.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 2,
          "mappings": [],
          "max": 1,
          "min": 0
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pagode"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "edm"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 8,
        "x": 0,
        "y": 54
      },
      "id": 6,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "none",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "builder",
          "format": "table",
          "rawSql": "SELECT genre, AVG(speechiness) FROM tracks GROUP BY genre ORDER BY genre ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "genre",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "AVG",
                "parameters": [
                  {
                    "name": "speechiness",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "genre",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "orderBy": {
              "property": {
                "name": [
                  "genre"
                ],
                "type": "string"
              },
              "type": "property"
            }
          },
          "table": "tracks"
        }
      ],
      "title": "Vocalização por gênero",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Detecta a presença de público na gravação. Valores mais altos de vivacidade representam uma probabilidade maior de que a faixa tenha sido tocada ao vivo. \n\nUm valor acima de 0.8 oferece forte probabilidade de que a faixa seja ao vivo.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 2,
          "mappings": [],
          "max": 1,
          "min": 0
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pagode"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "edm"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 8,
        "x": 8,
        "y": 54
      },
      "id": 9,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "none",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "builder",
          "format": "table",
          "rawSql": "SELECT genre, AVG(liveness) FROM tracks GROUP BY genre ORDER BY genre ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "genre",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "AVG",
                "parameters": [
                  {
                    "name": "liveness",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "genre",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "orderBy": {
              "property": {
                "name": [
                  "genre"
                ],
                "type": "string"
              },
              "type": "property"
            }
          },
          "table": "tracks"
        }
      ],
      "title": "Vivacidade por gênero",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Prevê se uma faixa não contém vocais. Os sons \"Ooh\" e \"aah\" são tratados como instrumentais neste contexto. Faixas de rap ou palavras faladas são claramente \"vocais\". Quanto mais próximo o valor da instrumentalidade estiver de 1.0, maior será a probabilidade de a faixa não conter conteúdo vocal. \n\nValores acima de 0.5 pretendem representar faixas instrumentais, mas a confiança é maior à medida que o valor se aproxima de 1.0.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 2,
          "mappings": [],
          "max": 1,
          "min": 0
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pagode"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "edm"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 8,
        "x": 16,
        "y": 54
      },
      "id": 8,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "none",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "builder",
          "format": "table",
          "rawSql": "SELECT genre, AVG(instrumentalness) FROM tracks GROUP BY genre ORDER BY genre ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "genre",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "AVG",
                "parameters": [
                  {
                    "name": "instrumentalness",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "genre",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "orderBy": {
              "property": {
                "name": [
                  "genre"
                ],
                "type": "string"
              },
              "type": "property"
            }
          },
          "table": "tracks"
        }
      ],
      "title": "Instrumentabilidade por gênero",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "Uma medida de 0.0 a 1.0 que descreve a positividade musical transmitida por uma faixa. \n\nFaixas com alta valência soam mais positivas (por exemplo, feliz, alegre, eufórica), enquanto faixas com baixa valência soam mais negativas (por exemplo, triste, deprimida, irritada).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 2,
          "mappings": [],
          "max": 1,
          "min": 0
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pagode"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "edm"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 8,
        "x": 0,
        "y": 63
      },
      "id": 10,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "none",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "builder",
          "format": "table",
          "rawSql": "SELECT genre, AVG(valence) FROM tracks GROUP BY genre ORDER BY genre ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "genre",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "AVG",
                "parameters": [
                  {
                    "name": "valence",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "genre",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "orderBy": {
              "property": {
                "name": [
                  "genre"
                ],
                "type": "string"
              },
              "type": "property"
            }
          },
          "table": "tracks"
        }
      ],
      "title": "Valência por gênero",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "A intensidade sonora geral de uma faixa em decibéis (dB). Os valores de intensidade sonora são calculados em média em toda a faixa e são úteis para comparar a intensidade sonora relativa das faixas. A intensidade sonora é a qualidade de um som que é o principal correlato psicológico da força física (amplitude). \n\nOs valores geralmente variam entre -60 e 0 db.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "média",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "log": 10,
              "type": "symlog"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 0,
          "min": -60,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "dB"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "avg"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#00ffff",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 8,
        "x": 8,
        "y": 63
      },
      "id": 4,
      "options": {
        "barRadius": 0,
        "barWidth": 0.9,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "text": {
          "valueSize": 20
        },
        "tooltip": {
          "mode": "none",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "builder",
          "format": "table",
          "rawSql": "SELECT genre, AVG(loudness) FROM tracks GROUP BY genre ORDER BY genre ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "genre",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "AVG",
                "parameters": [
                  {
                    "name": "loudness",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "genre",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "orderBy": {
              "property": {
                "name": [
                  "genre"
                ],
                "type": "string"
              },
              "type": "property"
            }
          },
          "table": "tracks"
        }
      ],
      "title": "Volume geral por gênero",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
      },
      "description": "O tempo estimado geral de uma faixa em batidas por minuto (BPM). \n\nNa terminologia musical, o tempo é a velocidade ou o ritmo de uma determinada peça e deriva diretamente da duração média da batida.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "média",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "fieldMinMax": false,
          "mappings": [],
          "max": 150,
          "min": 60,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "BPM"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "avg"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#00ffff",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 8,
        "x": 16,
        "y": 63
      },
      "id": 13,
      "options": {
        "barRadius": 0,
        "barWidth": 0.9,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "text": {
          "valueSize": 22
        },
        "tooltip": {
          "mode": "none",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_GRAFANA-POSTGRESQL-DATASOURCE}"
          },
          "editorMode": "builder",
          "format": "table",
          "rawSql": "SELECT genre, AVG(tempo) FROM tracks GROUP BY genre ORDER BY genre ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "genre",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "AVG",
                "parameters": [
                  {
                    "name": "tempo",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "genre",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "orderBy": {
              "property": {
                "name": [
                  "genre"
                ],
                "type": "string"
              },
              "type": "property"
            }
          },
          "table": "tracks"
        }
      ],
      "title": "Tempo por gênero",
      "type": "barchart"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "50",
          "value": "50"
        },
        "description": "Número máximo de resultados nos painéis de rankings.",
        "hide": 0,
        "includeAll": false,
        "label": "TOP",
        "multi": false,
        "name": "top_rankings_limit",
        "options": [
          {
            "selected": false,
            "text": "5",
            "value": "5"
          },
          {
            "selected": false,
            "text": "10",
            "value": "10"
          },
          {
            "selected": false,
            "text": "25",
            "value": "25"
          },
          {
            "selected": true,
            "text": "50",
            "value": "50"
          },
          {
            "selected": false,
            "text": "100",
            "value": "100"
          }
        ],
        "query": "5,10,25,50,100",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": "",
        "current": {
          "selected": true,
          "text": [
            "pop"
          ],
          "value": [
            "pop"
          ]
        },
        "description": "Gêneros a serem mostrados nos painéis de rankings.",
        "hide": 0,
        "includeAll": true,
        "label": "Gênero",
        "multi": true,
        "name": "ranking_genres",
        "options": [
          {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "classica",
            "value": "classica"
          },
          {
            "selected": false,
            "text": "edm",
            "value": "edm"
          },
          {
            "selected": false,
            "text": "pagode",
            "value": "pagode"
          },
          {
            "selected": true,
            "text": "pop",
            "value": "pop"
          },
          {
            "selected": false,
            "text": "rap",
            "value": "rap"
          },
          {
            "selected": false,
            "text": "rock",
            "value": "rock"
          }
        ],
        "query": "classica,edm,pagode,pop,rap,rock",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "hidden": true
  },
  "timezone": "browser",
  "title": "Default",
  "uid": "be39zzqq6udxcb",
  "version": 115,
  "weekStart": ""
}